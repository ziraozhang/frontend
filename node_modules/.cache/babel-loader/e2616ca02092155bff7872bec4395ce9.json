{"ast":null,"code":"var _jsxFileName = \"/Users/zhangzirao/Desktop/website/Archive/src/component/Album.js\";\nimport React, { Component, useCallback } from 'react'; // import Dimensions from 'react-dimensions';\n\nimport { Card, CardColumns, CardDeck, Col, Row } from 'react-bootstrap';\nimport Gallery from \"react-photo-gallery\";\nimport Carousel, { Modal, ModalGateway } from 'react-images';\n\nclass Album extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      id: null,\n      type: null,\n      generalwidth: null,\n      index: 0,\n      open: false\n    };\n    this.myInput = React.createRef();\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  getdata() {\n    let mycomp = this;\n    fetch('/data/data.json').then(function (response) {\n      return response.json();\n    }).then(function (responseData) {\n      // console.log(responseData)\n      mycomp.setState({\n        data: responseData[mycomp.state.type]\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.type !== nextProps.type) {\n      console.log(this.props.type);\n      this.setState({\n        type: nextProps.type\n      });\n      this.getdata();\n    }\n  }\n\n  componentDidMount() {\n    var _id = this.props.match.params.id;\n    this.setState({\n      id: _id,\n      type: this.props.type\n    });\n    this.getdata();\n    console.log(window.innerWidth, window.innerHeight, this.myInput.current.offsetWidth);\n    this.setState({\n      generalwidth: this.myInput.current.offsetWidth\n    });\n  }\n\n  handleClick(index) {\n    console.log(\"test\", index);\n  }\n\n  closeLightbox() {\n    this.setState({\n      index: 0,\n      open: false\n    });\n  }\n\n  render() {\n    var items, i, sf, namefont;\n    items = [];\n    sf = {\n      \"name\": \"Unknown\",\n      \"column\": 0\n    };\n    console.log(this.state.data);\n\n    if (this.state.data !== null) {\n      for (i = 0; i < this.state.data.content.length; i++) {\n        console.log(this.state.data.content[i].id, parseInt(this.state.id, 10));\n\n        if (this.state.data.content[i].id === parseInt(this.state.id, 10)) {\n          sf = this.state.data.content[i];\n          namefont = sf.font.name;\n          var columnnum = sf.column;\n          var j;\n\n          for (j = 0; j < sf.pics.length; j++) {\n            var imgitem;\n\n            if (this.state.generalwidth === null) {\n              imgitem = /*#__PURE__*/React.createElement(\"img\", {\n                key: j,\n                onClick: this.handleClick(j),\n                src: sf.pics[j].src,\n                style: {\n                  width: \"100%\"\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 40\n                }\n              });\n            } else {\n              imgitem = /*#__PURE__*/React.createElement(\"img\", {\n                key: j,\n                onClick: this.handleClick(j),\n                src: sf.pics[j].src,\n                style: {\n                  padding: \"5px 5px 5px 5px\",\n                  width: this.state.generalwidth / columnnum,\n                  height: this.state.generalwidth / columnnum / sf.pics[i].ratio\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 40\n                }\n              });\n            }\n\n            items.push(imgitem);\n          }\n\n          break;\n        }\n      }\n    } else {\n      namefont = \"\";\n    }\n\n    console.log(sf);\n    console.log(items);\n    return /*#__PURE__*/React.createElement(Row, {\n      style: {\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      ref: this.myInput,\n      style: {\n        borderColor: \"black\"\n      },\n      xs: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardDeck, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, items), /*#__PURE__*/React.createElement(ModalGateway, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, this.state.open ? /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.closeLightbox.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Carousel, {\n      currentIndex: this.state.index,\n      views: items.map(x => ({ ...x,\n        srcset: x.srcSet,\n        caption: x.title\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    })) : null)));\n  }\n\n}\n\n;\nexport default Album;","map":{"version":3,"sources":["/Users/zhangzirao/Desktop/website/Archive/src/component/Album.js"],"names":["React","Component","useCallback","Card","CardColumns","CardDeck","Col","Row","Gallery","Carousel","Modal","ModalGateway","Album","constructor","props","state","data","id","type","generalwidth","index","open","myInput","createRef","handleClick","bind","getdata","mycomp","fetch","then","response","json","responseData","setState","catch","error","console","log","componentWillReceiveProps","nextProps","componentDidMount","_id","match","params","window","innerWidth","innerHeight","current","offsetWidth","closeLightbox","render","items","i","sf","namefont","content","length","parseInt","font","name","columnnum","column","j","pics","imgitem","src","width","padding","height","ratio","push","justifyContent","alignItems","borderColor","map","x","srcset","srcSet","caption","title"],"mappings":"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","sourcesContent":["import React, { Component, useCallback } from 'react';\n// import Dimensions from 'react-dimensions';\n\nimport {Card, CardColumns, CardDeck, Col, Row} from 'react-bootstrap';\nimport Gallery from \"react-photo-gallery\";\n\nimport Carousel, { Modal, ModalGateway } from 'react-images';\n\nclass Album extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            data:null,\n            id:null,\n            type:null,\n            generalwidth:null,\n            index:0,\n            open:false,\n        }\n\n        this.myInput=React.createRef()\n        this.handleClick=this.handleClick.bind(this)\n    }\n\n    getdata(){\n        let mycomp = this;\n        fetch('/data/data.json').then(\n            function(response){\n                return response.json()\n            }\n        ).then(\n            function(responseData){\n                // console.log(responseData)\n                mycomp.setState({data:responseData[mycomp.state.type]})\n            }\n        ).catch(\n            function(error){\n                console.log(error)\n            }\n        )\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(this.props.type !== nextProps.type){\n            console.log(this.props.type)\n            this.setState({type:nextProps.type})\n            this.getdata()\n        }\n    }\n\n    componentDidMount(){\n        var _id = this.props.match.params.id\n        this.setState({id:_id, type:this.props.type})\n        this.getdata()\n        console.log(window.innerWidth, window.innerHeight, this.myInput.current.offsetWidth)\n        this.setState({generalwidth:this.myInput.current.offsetWidth})\n    }\n\n    handleClick(index){\n        console.log(\"test\",index)\n    }\n\n    closeLightbox(){\n        this.setState({index:0, open:false})\n    }\n\n    render(){\n        var items,i,sf,namefont;\n        items=[];\n        sf = {\n            \"name\":\"Unknown\",\n            \"column\":0\n        }\n        console.log(this.state.data)\n        if(this.state.data !== null){\n            \n            for(i=0;i<this.state.data.content.length;i++){\n                console.log(this.state.data.content[i].id,parseInt(this.state.id,10))\n                if(this.state.data.content[i].id === parseInt(this.state.id,10)){\n                    sf = this.state.data.content[i]\n                    namefont=sf.font.name\n\n                    var columnnum = sf.column\n\n                    var j;\n                    for (j=0;j<sf.pics.length;j++){\n                        var imgitem\n                        if(this.state.generalwidth === null){\n                            imgitem = (<img key={j} onClick={this.handleClick(j)} src={sf.pics[j].src} style={{width:\"100%\"}} />)\n                        }else{\n                            imgitem = (<img key={j} onClick={this.handleClick(j)} src={sf.pics[j].src} style={{padding:\"5px 5px 5px 5px\",width:this.state.generalwidth/columnnum, height:this.state.generalwidth/columnnum/sf.pics[i].ratio}} />)\n                        }\n                        items.push(\n                            imgitem\n                        )\n                    }\n                    break;\n                }\n            }\n        }else{\n            namefont = \"\"\n        }\n\n        \n\n        console.log(sf)\n        console.log(items)\n\n        \n\n        return (\n                <Row style={{justifyContent:\"center\",alignItems:\"center\"}}>\n                    <Col ref={this.myInput} style={{borderColor:\"black\"}} xs={10}>\n                        <CardDeck >\n                            {items}\n                        </CardDeck>\n                        <ModalGateway>\n                            {this.state.open ? (\n                            <Modal onClose={this.closeLightbox.bind(this)}>\n                                <Carousel\n                                currentIndex={this.state.index}\n                                views={items.map(x => ({\n                                    ...x,\n                                    srcset: x.srcSet,\n                                    caption: x.title\n                                }))}\n                                />\n                            </Modal>\n                            ) : null}\n                        </ModalGateway>\n                    </Col>\n                </Row>\n            \n        )\n        \n        \n    }\n};\n\nexport default Album;"]},"metadata":{},"sourceType":"module"}