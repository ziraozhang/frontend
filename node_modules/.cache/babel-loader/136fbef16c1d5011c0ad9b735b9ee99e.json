{"ast":null,"code":"var _jsxFileName = \"/Users/zhangzirao/Desktop/website/Archive/src/component/Album.js\";\nimport React, { Component } from 'react'; // import Dimensions from 'react-dimensions';\n\nimport Img from './Img';\nimport CarouselPage from './Carousel';\nimport { Card, Carousel, CardDeck, Col, Row } from 'react-bootstrap';\nimport Gallery from \"react-photo-gallery\"; // import Carousel, { Modal, ModalGateway } from 'react-images';\n\nclass Album extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      id: null,\n      type: null,\n      generalwidth: null,\n      index: 0,\n      open: false\n    };\n    this.myInput = React.createRef();\n    this.handleClick = this.handleClick.bind(this);\n    this.closeLightbox = this.closeLightbox.bind(this);\n    this.openLightbox = this.openLightbox.bind(this);\n  }\n\n  getdata() {\n    let mycomp = this;\n    fetch('/data/data.json').then(function (response) {\n      return response.json();\n    }).then(function (responseData) {\n      console.log(responseData);\n      console.log(mycomp.state.type);\n      mycomp.setState({\n        data: responseData[mycomp.state.type]\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.type !== nextProps.type) {\n      var _id = nextProps.match.params.id; // console.log(this.props.type,nextProps.type,_id)\n\n      this.setState({\n        id: _id,\n        type: nextProps.type\n      });\n      this.getdata();\n      this.setState({\n        generalwidth: this.myInput.current.offsetWidth\n      });\n    }\n  }\n\n  componentDidMount() {\n    var _id = this.props.match.params.id;\n    this.setState({\n      id: _id,\n      type: this.props.type\n    });\n    this.getdata();\n    this.setState({\n      generalwidth: this.myInput.current.offsetWidth\n    });\n  }\n\n  handleClick(_index) {\n    // console.log(\"test\",_index)\n    this.setState({\n      index: _index,\n      open: true\n    });\n  }\n\n  openLightbox(event, {\n    photo,\n    index\n  }) {\n    // console.log(event, photo, index)\n    this.setState({\n      index: index,\n      open: true\n    });\n  }\n\n  closeLightbox() {\n    this.setState({\n      index: 0,\n      open: false\n    });\n  }\n\n  render() {\n    var items, i, sf, namefont;\n    items = [];\n    sf = {\n      \"name\": \"Unknown\",\n      \"column\": 0\n    }; // console.log(this.state.data)\n\n    if (this.state.data !== null) {\n      for (i = 0; i < this.state.data.content.length; i++) {\n        // console.log(this.state.data.content[i].id,parseInt(this.state.id,10))\n        if (this.state.data.content[i].id === parseInt(this.state.id, 10)) {\n          sf = this.state.data.content[i];\n          namefont = sf.font.name;\n          var columnnum = sf.column;\n\n          if (columnnum === 0) {\n            columnnum = 1;\n          }\n\n          var j;\n          lines = sf.lines;\n          photos = {};\n\n          for (j = 1; j <= sf.pics.length; j++) {\n            photos[j] = sf.pics[j - 1];\n          }\n\n          for (j = 0; j < lines.length; j++) {\n            //calculate for each line\n            var totalwidth = 0;\n            var l;\n            var index;\n            var actualhight;\n\n            for (l = 0; l < lines[j].length; l++) {\n              index = lines[j][l];\n              totalwidth += 100 * photo[index].ratio;\n            }\n\n            if (this.state.generalwidth === null) {\n              actualhight = 100;\n            } else {\n              actualhight = this.state.generalwidth * 100 / totalwidth;\n            }\n\n            for (l = 0; l < lines[j].length; l++) {\n              index = lines[j][l];\n              items.push({\n                'src': photo[index].src,\n                'width': photo[index].ratio * actualhight,\n                'height': actualhight\n              });\n            }\n          } // for (j=0;j<sf.pics.length;j++){\n          //     var imgitem\n          //     if(this.state.generalwidth === null){\n          //         // imgitem = {'src':sf.pics[j].src, 'index':j, 'width':1, height:this.state.generalwidth/sf.pics[j].ratio}\n          //         // imgitem = (<Img key={j} onClick={this.handleClick} index={j} src={sf.pics[j].src} style={{borderColor:\"black\",width:\"100%\"}} />)\n          //         // imgitem = {'src':sf.pics[j].src, 'width':1, 'height':sf.pics[j].ratio}\n          //     }else{\n          //         // console.log(j,window.innerWidth, window.innerHeight, this.myInput.current.offsetWidth, this.state.generalwidth/columnnum, this.state.generalwidth/columnnum/sf.pics[j].ratio)\n          //         if(sf.pics[j].large==\"true\"){\n          //             imgitem = {'src':sf.pics[j].src, 'index':j, 'width':this.state.generalwidth, height:this.state.generalwidth/sf.pics[j].ratio}\n          //             // imgitem = (<Img key={j} onClick={this.handleClick} index={j} src={sf.pics[j].src} style={{padding:\"5px 5px 5px 5px\",width:this.state.generalwidth, height:this.state.generalwidth/sf.pics[j].ratio}} />)\n          //         }else{\n          //             imgitem = {'src':sf.pics[j].src, 'index':j, 'width':this.state.generalwidth/columnnum, height:this.state.generalwidth/columnnum/sf.pics[j].ratio}\n          //             // imgitem = (<Img key={j} onClick={this.handleClick} index={j} src={sf.pics[j].src} style={{padding:\"5px 5px 5px 5px\",width:this.state.generalwidth/columnnum, height:this.state.generalwidth/columnnum/sf.pics[j].ratio}} />)\n          //         }\n          //         // imgitem = {'src':sf.pics[j].src, 'width':100*sf.pics[j].ratio, 'height':100}\n          //         items.push(\n          //             imgitem\n          //         )\n          //     }\n          // }\n\n\n          break;\n        }\n      }\n    } else {\n      namefont = \"\";\n    } // console.log(items)\n\n\n    return /*#__PURE__*/React.createElement(Row, {\n      style: {\n        minHeight: \"80vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      ref: this.myInput,\n      style: {\n        borderColor: \"black\"\n      },\n      xs: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, this.state.open ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CarouselPage, {\n      index: this.state.index,\n      data: sf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.closeLightbox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, \"back\")) : sf.column === 0 ? /*#__PURE__*/React.createElement(Gallery, {\n      photos: items,\n      onClick: this.openLightbox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 47\n      }\n    }) : /*#__PURE__*/React.createElement(CardDeck, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 33\n      }\n    }, items.map(item => /*#__PURE__*/React.createElement(Img, {\n      key: item.index,\n      onClick: this.handleClick,\n      index: item.index,\n      src: item.src,\n      style: {\n        backgroundColor: \"transparent\",\n        borderColor: \"transparent\",\n        padding: \"0px 0px 0px 0px\",\n        width: item.width,\n        height: item.height\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 45\n      }\n    })))));\n  }\n\n}\n\n;\nexport default Album;","map":{"version":3,"sources":["/Users/zhangzirao/Desktop/website/Archive/src/component/Album.js"],"names":["React","Component","Img","CarouselPage","Card","Carousel","CardDeck","Col","Row","Gallery","Album","constructor","props","state","data","id","type","generalwidth","index","open","myInput","createRef","handleClick","bind","closeLightbox","openLightbox","getdata","mycomp","fetch","then","response","json","responseData","console","log","setState","catch","error","componentWillReceiveProps","nextProps","_id","match","params","current","offsetWidth","componentDidMount","_index","event","photo","render","items","i","sf","namefont","content","length","parseInt","font","name","columnnum","column","j","lines","photos","pics","totalwidth","l","actualhight","ratio","push","src","minHeight","justifyContent","alignItems","borderColor","map","item","backgroundColor","padding","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import Dimensions from 'react-dimensions';\nimport Img from './Img'\nimport CarouselPage from './Carousel'\nimport {Card, Carousel, CardDeck, Col, Row} from 'react-bootstrap';\nimport Gallery from \"react-photo-gallery\";\n\n// import Carousel, { Modal, ModalGateway } from 'react-images';\n\nclass Album extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            data:null,\n            id:null,\n            type:null,\n            generalwidth:null,\n            index:0,\n            open:false,\n        }\n\n        this.myInput=React.createRef()\n        this.handleClick=this.handleClick.bind(this)\n        this.closeLightbox=this.closeLightbox.bind(this)\n        this.openLightbox = this.openLightbox.bind(this)\n    }\n\n    getdata(){\n        let mycomp = this;\n        fetch('/data/data.json').then(\n            function(response){\n                return response.json()\n            }\n        ).then(\n            function(responseData){\n                console.log(responseData)\n                console.log(mycomp.state.type)\n                mycomp.setState({data:responseData[mycomp.state.type]})\n            }\n        ).catch(\n            function(error){\n                console.log(error)\n            }\n        )\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(this.props.type !== nextProps.type){\n            var _id = nextProps.match.params.id\n            // console.log(this.props.type,nextProps.type,_id)\n            this.setState({id:_id, type:nextProps.type})\n            this.getdata()\n            this.setState({generalwidth:this.myInput.current.offsetWidth})\n        }\n    }\n\n    componentDidMount(){\n        var _id = this.props.match.params.id\n        this.setState({id:_id, type:this.props.type})\n        this.getdata()\n        this.setState({generalwidth:this.myInput.current.offsetWidth})\n    }\n\n    handleClick(_index){\n        // console.log(\"test\",_index)\n        this.setState({index:_index, open:true})\n    }\n\n    openLightbox(event, {photo, index}){\n        // console.log(event, photo, index)\n        this.setState({index:index, open:true})\n    }\n\n    closeLightbox(){\n        this.setState({index:0, open:false})\n    }\n\n    render(){\n        var items,i,sf,namefont;\n        items=[];\n        sf = {\n            \"name\":\"Unknown\",\n            \"column\":0,\n        }\n        // console.log(this.state.data)\n        \n        if(this.state.data !== null){\n            \n            for(i=0;i<this.state.data.content.length;i++){\n                // console.log(this.state.data.content[i].id,parseInt(this.state.id,10))\n                if(this.state.data.content[i].id === parseInt(this.state.id,10)){\n                    sf = this.state.data.content[i]\n                    namefont=sf.font.name\n\n                    var columnnum = sf.column\n                    if(columnnum === 0){\n                        columnnum = 1\n                    }\n\n                    var j;\n\n                    lines = sf.lines;\n\n                    photos = {}\n\n                    for (j=1; j<=sf.pics.length;j++){\n                        photos[j] = sf.pics[j-1]\n                    }\n\n                    for (j=0; j<lines.length; j++){\n                        //calculate for each line\n                        var totalwidth=0;\n                        var l;\n                        var index;\n                        var actualhight;\n                        for(l=0; l<lines[j].length; l++){\n                            index = lines[j][l]\n                            totalwidth += 100 * photo[index].ratio\n                        }\n\n                        \n                        if(this.state.generalwidth === null){\n                            actualhight = 100;\n                        }else{\n                            actualhight = this.state.generalwidth * 100 / totalwidth;\n                        }\n\n                        for(l=0; l<lines[j].length; l++){\n                            index = lines[j][l];\n                            items.push(\n                                {\n                                    'src':photo[index].src,\n                                    'width':photo[index].ratio * actualhight,\n                                    'height':actualhight\n                                }\n                            )\n                        }\n                    }\n                    \n\n                    // for (j=0;j<sf.pics.length;j++){\n                    //     var imgitem\n                        \n                    //     if(this.state.generalwidth === null){\n                    //         // imgitem = {'src':sf.pics[j].src, 'index':j, 'width':1, height:this.state.generalwidth/sf.pics[j].ratio}\n                    //         // imgitem = (<Img key={j} onClick={this.handleClick} index={j} src={sf.pics[j].src} style={{borderColor:\"black\",width:\"100%\"}} />)\n                    //         // imgitem = {'src':sf.pics[j].src, 'width':1, 'height':sf.pics[j].ratio}\n                    //     }else{\n                    //         // console.log(j,window.innerWidth, window.innerHeight, this.myInput.current.offsetWidth, this.state.generalwidth/columnnum, this.state.generalwidth/columnnum/sf.pics[j].ratio)\n                    //         if(sf.pics[j].large==\"true\"){\n                    //             imgitem = {'src':sf.pics[j].src, 'index':j, 'width':this.state.generalwidth, height:this.state.generalwidth/sf.pics[j].ratio}\n                    //             // imgitem = (<Img key={j} onClick={this.handleClick} index={j} src={sf.pics[j].src} style={{padding:\"5px 5px 5px 5px\",width:this.state.generalwidth, height:this.state.generalwidth/sf.pics[j].ratio}} />)\n                    //         }else{\n                    //             imgitem = {'src':sf.pics[j].src, 'index':j, 'width':this.state.generalwidth/columnnum, height:this.state.generalwidth/columnnum/sf.pics[j].ratio}\n                    //             // imgitem = (<Img key={j} onClick={this.handleClick} index={j} src={sf.pics[j].src} style={{padding:\"5px 5px 5px 5px\",width:this.state.generalwidth/columnnum, height:this.state.generalwidth/columnnum/sf.pics[j].ratio}} />)\n                    //         }\n                    //         // imgitem = {'src':sf.pics[j].src, 'width':100*sf.pics[j].ratio, 'height':100}\n                    //         items.push(\n                    //             imgitem\n                    //         )\n                    //     }\n                    // }\n                    break;\n                }\n            }\n        }else{\n            namefont = \"\"\n        }\n        // console.log(items)\n        return (\n                <Row style={{minHeight:\"80vh\", justifyContent:\"center\",alignItems:\"center\"}}>\n                    <Col ref={this.myInput} style={{borderColor:\"black\"}} xs={10}>\n                    {this.state.open ? (\n                            <div>\n                            <CarouselPage index={this.state.index} data={sf} />\n                            <button onClick={this.closeLightbox}>back</button>\n                            </div>\n                            \n                        ) : (\n                            sf.column === 0 ? <Gallery photos={items} onClick={this.openLightbox}/> : (\n                                <CardDeck >\n                                    {items.map(\n                                        item => (\n                                            <Img key={item.index} onClick={this.handleClick} index={item.index} src={item.src} style={{backgroundColor:\"transparent\",borderColor:\"transparent\",padding:\"0px 0px 0px 0px\",width:item.width, height:item.height}}/>\n                                        )\n                                    )}\n                                </CardDeck>\n                            )\n                            \n                        )}\n                    </Col>\n                </Row>\n            \n        )\n        \n        \n    }\n};\n\nexport default Album;"]},"metadata":{},"sourceType":"module"}