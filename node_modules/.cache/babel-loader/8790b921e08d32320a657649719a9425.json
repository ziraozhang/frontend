{"ast":null,"code":"var _jsxFileName = \"/Users/zhangzirao/Desktop/website/Archive/src/component/Album.js\";\nimport React, { Component } from 'react'; // import Dimensions from 'react-dimensions';\n\nimport { Card, CardColumns, Col, Row } from 'react-bootstrap';\n\nclass Album extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      id: null,\n      type: null,\n      generalwidth: null\n    };\n    this.myInput = React.createRef();\n  }\n\n  getdata() {\n    let mycomp = this;\n    fetch('/data/data.json').then(function (response) {\n      return response.json();\n    }).then(function (responseData) {\n      // console.log(responseData)\n      mycomp.setState({\n        data: responseData[mycomp.state.type]\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.type !== nextProps.type) {\n      console.log(this.props.type);\n      this.setState({\n        type: nextProps.type\n      });\n      this.getdata();\n    }\n  }\n\n  componentDidMount() {\n    var _id = this.props.match.params.id;\n    this.setState({\n      id: _id,\n      type: this.props.type\n    });\n    this.getdata();\n    console.log(window.innerWidth, window.innerHeight, this.myInput.current.offsetWidth);\n    this.setState({\n      generalwidth: this.myInput.current.offsetWidth\n    });\n  }\n\n  render() {\n    var items, i, sf, namefont;\n    items = [];\n    sf = {\n      \"name\": \"Unknown\"\n    };\n    console.log(this.state.data);\n\n    if (this.state.data !== null) {\n      for (i = 0; i < this.state.data.content.length; i++) {\n        console.log(this.state.data.content[i].id, parseInt(this.state.id, 10));\n\n        if (this.state.data.content[i].id === parseInt(this.state.id, 10)) {\n          sf = this.state.data.content[i];\n          namefont = sf.font.name;\n          var columnnum = sf.column;\n          var j;\n\n          for (j = 0; j < columnnum; j++) {\n            items.push([]);\n          }\n\n          for (j = 0; j < sf.pics.length; j++) {\n            var imgitem, index;\n\n            if (this.state.generalwidth === null) {\n              imgitem = /*#__PURE__*/React.createElement(\"img\", {\n                src: sf.pics[j].src,\n                style: {\n                  width: \"100%\"\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 40\n                }\n              });\n            } else {\n              imgitem = /*#__PURE__*/React.createElement(\"img\", {\n                src: sf.pics[j].src,\n                style: {\n                  width: this.state.generalwidth,\n                  height: this.state.generalwidth / sf.pics[i].ratio\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 40\n                }\n              });\n            }\n\n            index = j % columnnum;\n            items[index].push( /*#__PURE__*/React.createElement(\"div\", {\n              key: sf.pics[j].src,\n              style: {\n                width: \"100%\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }\n            }, imgitem, /*#__PURE__*/React.createElement(\"p\", {\n              style: {\n                textAlign: \"center\",\n                fontFamily: sf.font.pic_text\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }\n            }, sf.pics[j].text), /*#__PURE__*/React.createElement(\"br\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }\n            })));\n          }\n\n          break;\n        }\n      }\n    } else {\n      namefont = \"\";\n    }\n\n    return /*#__PURE__*/React.createElement(Row, {\n      style: {\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      ref: this.myInput,\n      style: {\n        borderColor: \"black\"\n      },\n      xs: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, items));\n  }\n\n}\n\n;\nexport default Album;","map":{"version":3,"sources":["/Users/zhangzirao/Desktop/website/Archive/src/component/Album.js"],"names":["React","Component","Card","CardColumns","Col","Row","Album","constructor","props","state","data","id","type","generalwidth","myInput","createRef","getdata","mycomp","fetch","then","response","json","responseData","setState","catch","error","console","log","componentWillReceiveProps","nextProps","componentDidMount","_id","match","params","window","innerWidth","innerHeight","current","offsetWidth","render","items","i","sf","namefont","content","length","parseInt","font","name","columnnum","column","j","push","pics","imgitem","index","src","width","height","ratio","textAlign","fontFamily","pic_text","text","justifyContent","alignItems","borderColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import Dimensions from 'react-dimensions';\n\nimport {Card, CardColumns, Col, Row} from 'react-bootstrap'\n\nclass Album extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            data:null,\n            id:null,\n            type:null,\n            generalwidth:null\n        }\n\n        this.myInput=React.createRef()\n    }\n\n    getdata(){\n        let mycomp = this;\n        fetch('/data/data.json').then(\n            function(response){\n                return response.json()\n            }\n        ).then(\n            function(responseData){\n                // console.log(responseData)\n                mycomp.setState({data:responseData[mycomp.state.type]})\n            }\n        ).catch(\n            function(error){\n                console.log(error)\n            }\n        )\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(this.props.type !== nextProps.type){\n            console.log(this.props.type)\n            this.setState({type:nextProps.type})\n            this.getdata()\n        }\n    }\n\n    componentDidMount(){\n        var _id = this.props.match.params.id\n        this.setState({id:_id, type:this.props.type})\n        this.getdata()\n        console.log(window.innerWidth, window.innerHeight, this.myInput.current.offsetWidth)\n        this.setState({generalwidth:this.myInput.current.offsetWidth})\n    }\n\n    render(){\n        var items,i,sf,namefont;\n        items=[];\n        sf = {\n            \"name\":\"Unknown\"\n        }\n        console.log(this.state.data)\n        if(this.state.data !== null){\n            \n            for(i=0;i<this.state.data.content.length;i++){\n                console.log(this.state.data.content[i].id,parseInt(this.state.id,10))\n                if(this.state.data.content[i].id === parseInt(this.state.id,10)){\n                    sf = this.state.data.content[i]\n                    namefont=sf.font.name\n\n                    var columnnum = sf.column\n\n                    var j;\n                    for(j=0;j<columnnum;j++){\n                        items.push([])\n                    }\n                    for (j=0;j<sf.pics.length;j++){\n                        var imgitem,index\n                        if(this.state.generalwidth === null){\n                            imgitem = (<img src={sf.pics[j].src} style={{width:\"100%\"}} />)\n                        }else{\n                            imgitem = (<img src={sf.pics[j].src} style={{width:this.state.generalwidth, height:this.state.generalwidth/sf.pics[i].ratio}} />)\n                        }\n                        index = j % columnnum\n                        items[index].push(\n                            <div key={sf.pics[j].src} style={{width:\"100%\"}}>\n                                {imgitem}\n                                <p style={{textAlign:\"center\", fontFamily:sf.font.pic_text}}>{sf.pics[j].text}</p>\n                                <br />\n                            </div>\n                        )\n                    }\n                    break;\n                }\n            }\n        }else{\n            namefont = \"\"\n        }\n        \n        return (\n            <Row style={{justifyContent:\"center\",alignItems:\"center\"}}>\n                <Col ref={this.myInput} style={{borderColor:\"black\"}} xs={10}>\n                    {items}\n                </Col>\n            </Row>\n        );\n    }\n};\n\nexport default Album;"]},"metadata":{},"sourceType":"module"}